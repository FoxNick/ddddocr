name: Rust Android CI

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - armeabi-v7a
          - arm64-v8a
          - x86
          - x86_64

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 安装 Rust 和安卓目标
      - name: Setup Rust toolchain and targets
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android,i686-linux-android

      # 3. 安装 Android NDK
      - name: Install Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25b

      # 4. 安装 cargo-ndk
      - name: Install cargo-ndk
        run: cargo install cargo-ndk

      # 5. 配置 ANDROID_NDK_HOME 环境变量
      - name: Export ANDROID_NDK_HOME
        run: echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV

      # 6. 构建并归档二进制
      - name: Build and package Android executable
        env:
          # rustup/cargo 有时需要加载环境
          CARGO_TERM_COLOR: always
        run: |
          case "${{ matrix.target }}" in
            armeabi-v7a)
              TARGET=armv7-linux-androideabi
              ;;
            arm64-v8a)
              TARGET=aarch64-linux-android
              ;;
            x86)
              TARGET=i686-linux-android
              ;;
            x86_64)
              TARGET=x86_64-linux-android
              ;;
            *)
              echo "Unknown ABI"
              exit 1
              ;;
          esac

          mkdir -p artifacts/${{ matrix.target }}

          # 构建所有二进制文件
          cargo ndk -t $TARGET -o ./artifacts/${{ matrix.target }} build --release --bins

          cd artifacts/${{ matrix.target }}
          tar -czvf ../${{ matrix.target }}_binaries.tar.gz .
          cd ../..

      # 7. 上传制品
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.target }}-binaries
          path: artifacts/${{ matrix.target }}_binaries.tar.gz
