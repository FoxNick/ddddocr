name: Rust Android CI

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
          - armeabi-v7a   # ARMv7 (兼容 armv7-linux-androideabi)
          - arm64-v8a     # ARM64 (兼容 aarch64-linux-android)
          - x86           # x86 (32位)
          - x86_64        # x86_64
    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 安装 Rust 和安卓目标
      - name: Setup Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          # 安装标准安卓目标（cargo-ndk 需此基础）
          rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android

      # 3. 安装 Android NDK（cargo-ndk 依赖）
      - name: Install Android NDK
        uses: jimhw/ndk-action@v1
        with:
          ndk-version: "25b"  # 推荐稳定版本[1](@ref)

      # 4. 安装 cargo-ndk（核心步骤）
      - name: Install cargo-ndk
        run: cargo install cargo-ndk

      # 5. 编译安卓可执行文件
      - name: Build Android executable
        run: |
          # 使用 cargo-ndk 自动处理 NDK 路径和工具链
          cargo ndk -t ${{ matrix.target }} -o ./artifacts build --release --bins

      # 6. 归档可执行文件
      - name: Package artifacts
        run: |
          cd artifacts
          tar -czvf ${{ matrix.target }}_binaries.tar.gz ${{ matrix.target }}/*

      # 7. 上传制品
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.target }}-binaries
          path: artifacts/${{ matrix.target }}_binaries.tar.gz
